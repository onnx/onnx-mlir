// RUN: onnx-mlir --EmitONNXBasic --printIR %s | FileCheck %s

// functiontest_attrname.onnxtext is from onnxruntime/test/framework/function_test.cc
<
ir_version: 8,
opset_import: [ "" : 16, "local" : 1 ]
>
agraph (float[N] x) => (float[N] y)
{
    y = local.myfun <s = 0> (x)
}

<
opset_import: [ "" : 16 ],
domain: "local"
>
myfun <s> (lx) => (ly) {
    d = Shape <start : int = @s> (lx)
    df = Cast <to = 1> (d)
    ly = Mul (lx, df)
}
// CHECK-LABEL:  func.func @main_graph
// CHECK-SAME:   ([[PARAM_0_:%.+]]: tensor<?xf32> {onnx.dim_params = "0:N", onnx.name = "x"}) -> (tensor<?xf32> {onnx.dim_params = "0:N", onnx.name = "y"}) {
// CHECK:           [[VAR_0_:%.+]] = "onnx.Shape"([[PARAM_0_]]) {start = 0 : si64} : (tensor<?xf32>) -> tensor<1xi64>
// CHECK:           [[VAR_1_:%.+]] = "onnx.Cast"([[VAR_0_]]) {saturate = 1 : si64, to = f32} : (tensor<1xi64>) -> tensor<1xf32>
// CHECK:           [[VAR_2_:%.+]] = "onnx.Mul"([[PARAM_0_]], [[VAR_1_]]) : (tensor<?xf32>, tensor<1xf32>) -> tensor<?xf32>
// CHECK:           onnx.Return [[VAR_2_]] : tensor<?xf32>
// CHECK:         }
// CHECK:         "onnx.EntryPoint"() {func = @main_graph} : () -> ()
