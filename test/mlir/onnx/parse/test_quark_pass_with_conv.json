// RUN: onnx-mlir --EmitONNXIR --useOnnxModelTypes=false --printIR %s | FileCheck %s
// Json generated with utils/onnx2json.py
// CHECK-LABEL:   func.func @main_graph(
// CHECK-SAME:                          %[[VAL_0:.*]]: tensor<1x1x32x32xbf16> {onnx.name = "input"}) -> (tensor<1x1x30x30xbf16> {onnx.name = "cast_out0"}) {
// CHECK:    %[[VAL_2:.*]] = onnx.Constant dense<1.500000e+00> : tensor<1xbf16>
// CHECK:    %[[VAL_1:.*]] = onnx.Constant dense<{{\[\[}}{{\[\[}}0.000000e+00, 1.000000e+00, -1.000000e+00], [0.000000e+00, 1.000000e+00, 0.000000e+00], [-1.000000e+00, 1.000000e+00, -1.000000e+00]]]]> : tensor<1x1x3x3xbf16>
// CHECK:    %[[VAL_3:.*]] = "onnx.Conv"(%[[VAL_0]], %[[VAL_1]], %[[VAL_2]]) {auto_pad = "NOTSET", dilations = [1, 1], group = 1 : si64, kernel_shape = [3, 3], onnx_node_name = "Conv6", pads = [0, 0, 0, 0], strides = [1, 1]} : (tensor<1x1x32x32xbf16>, tensor<1x1x3x3xbf16>, tensor<1xbf16>) -> tensor<1x1x30x30xbf16>
// CHECK:    return %[[VAL_3]] : tensor<1x1x30x30xbf16>
// CHECK:  }
// CHECK:  "onnx.EntryPoint"() {func = @main_graph} : () -> ()
{
  "irVersion": "8",
  "producerName": "quark.onnx",
  "producerVersion": "2.1.2",
  "graph": {
    "node": [
      {
        "input": [
          "input"
        ],
        "output": [
          "cast_in0"
        ],
        "name": "Cast3",
        "opType": "Cast",
        "attribute": [
          {
            "name": "to",
            "i": "1",
            "type": "INT"
          }
        ],
        "domain": ""
      },
      {
        "input": [
          "weight"
        ],
        "output": [
          "cast_weight"
        ],
        "name": "Cast4",
        "opType": "Cast",
        "attribute": [
          {
            "name": "to",
            "i": "1",
            "type": "INT"
          }
        ],
        "domain": ""
      },
      {
        "input": [
          "bias"
        ],
        "output": [
          "cast_bias"
        ],
        "name": "Cast5",
        "opType": "Cast",
        "attribute": [
          {
            "name": "to",
            "i": "1",
            "type": "INT"
          }
        ],
        "domain": ""
      },
      {
        "input": [
          "cast_in0",
          "cast_weight",
          "cast_bias"
        ],
        "output": [
          "conv0"
        ],
        "name": "Conv6",
        "opType": "Conv",
        "attribute": [
          {
            "name": "dilations",
            "ints": [
              "1",
              "1"
            ],
            "type": "INTS"
          },
          {
            "name": "group",
            "i": "1",
            "type": "INT"
          },
          {
            "name": "kernel_shape",
            "ints": [
              "3",
              "3"
            ],
            "type": "INTS"
          },
          {
            "name": "pads",
            "ints": [
              "0",
              "0",
              "0",
              "0"
            ],
            "type": "INTS"
          },
          {
            "name": "strides",
            "ints": [
              "1",
              "1"
            ],
            "type": "INTS"
          }
        ],
        "domain": ""
      },
      {
        "input": [
          "conv0"
        ],
        "output": [
          "cast_out0"
        ],
        "name": "Cast7",
        "opType": "Cast",
        "attribute": [
          {
            "name": "to",
            "i": "16",
            "type": "INT"
          }
        ],
        "domain": ""
      }
    ],
    "name": "main",
    "initializer": [
      {
        "dims": [
          "1",
          "1",
          "3",
          "3"
        ],
        "dataType": 1,
        "floatData": [
          0.0,
          1.0,
          -1.0,
          0.0,
          1.0,
          0.0,
          -1.0,
          1.0,
          -1.0
        ],
        "name": "weight"
      },
      {
        "dims": [
          "1"
        ],
        "dataType": 1,
        "floatData": [
          1.5
        ],
        "name": "bias"
      }
    ],
    "input": [
      {
        "name": "input",
        "type": {
          "tensorType": {
            "elemType": 16,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "32"
                },
                {
                  "dimValue": "32"
                }
              ]
            }
          }
        }
      }
    ],
    "output": [
      {
        "name": "cast_out0",
        "type": {
          "tensorType": {
            "elemType": 16,
            "shape": {
              "dim": [
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "1"
                },
                {
                  "dimValue": "30"
                },
                {
                  "dimValue": "30"
                }
              ]
            }
          }
        }
      }
    ]
  },
  "opsetImport": [
    {
      "domain": "",
      "version": "19"
    }
  ]
}