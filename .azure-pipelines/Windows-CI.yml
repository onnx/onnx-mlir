trigger:
- master

parameters:
- name: CTEST_PARALLEL_LEVEL
  type: string
  default: '4'

jobs:
- job: 'Build_onnx_mlir_Windows'
  timeoutInMinutes: 240
  pool:
    vmImage: 'windows-2019'
  strategy:
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    displayName: Set Python Version to 3.9
    inputs:
      versionSpec: '3.9'

  - task: PowerShell@2
    displayName: Setup ninja
    inputs:
      targetType: 'inline'
      script: |
        echo "Check and set up ninja"
        if (-Not (Get-Command ninja -errorAction SilentlyContinue))
        {
          echo "choco install ninja"
          choco install ninja
        }

  - checkout: self
    clean: true
    submodules: recursive
    path: onnx-mlir

  - script: |
      call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      call onnx-mlir\utils\install-protobuf.cmd
    displayName: Install protobuf
    workingDirectory: $(Agent.BuildDirectory)

  - script: |
      call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      call onnx-mlir\utils\install-mlir.cmd
    displayName: Install mlir
    workingDirectory: $(Agent.BuildDirectory)

  - script: |
      call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      call onnx-mlir\utils\build-onnx-mlir.cmd
    displayName: Install onnx-mlir
    workingDirectory: $(Agent.BuildDirectory)

  - script: |
      call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      call onnx-mlir\utils\check-onnx-mlir.cmd
    displayName: Test onnx-mlir
    workingDirectory: $(Agent.BuildDirectory)

  - script: |
      call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      call onnx-mlir\utils\check-onnx-numerical.cmd
    displayName: Run onnx-mlir numerical tests
    workingDirectory: $(Agent.BuildDirectory)
    env:
      CTEST_PARALLEL_LEVEL: ${{ parameters.CTEST_PARALLEL_LEVEL }}

  - script: |
      call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      cd onnx-mlir\third_party\onnx
      python setup.py -q install
    env:
      CMAKE_ARGS: -DCMAKE_PREFIX_PATH="$(Agent.BuildDirectory)\protobuf_install" -DONNX_USE_PROTOBUF_SHARED_LIBS=OFF -DProtobuf_USE_STATIC_LIBS=ON -DONNX_USE_MSVC_STATIC_RUNTIME=OFF
    displayName: Install onnx
    workingDirectory: $(Agent.BuildDirectory)

  - script: |
      call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
      call onnx-mlir\utils\check-docs.cmd
    displayName: Run onnx-mlir doc tests
    workingDirectory: $(Agent.BuildDirectory)

